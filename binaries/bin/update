#!/bin/bash
# From https://github.com/jessfraz/dotfiles/master/bin/htotheizzo
set -e

help() {
	echo "update-packages - a simple script that makes updating/upgrading apt, pip packages, and node packages so much easier"
}

# Choose a user account to use
get_user() {
	if [ -z "${TARGET_USER-}" ]; then
		mapfile -t options < <(find /home/* -maxdepth 0 -printf "%f\\n" -type d)
		# if there is only one option just use that user
		if [ "${#options[@]}" -eq "1" ]; then
			readonly TARGET_USER="${options[0]}"
			echo "Using user account: ${TARGET_USER}"
			return
		fi

		# iterate through the user options and print them
		PS3='Which user account should be used? '

		select opt in "${options[@]}"; do
			readonly TARGET_USER=$opt
			break
		done
	fi
}

dcleanup(){
	local containers
	mapfile -t containers < <(docker ps --filter status=exited -q 2>/dev/null)
	docker rm "${containers[@]}" 2>/dev/null
	local images
	mapfile -t images < <(docker images --filter dangling=true -q 2>/dev/null)
	docker rmi "${images[@]}" 2>/dev/null
}

update_apt() {
	echo
	echo "Updating apt.."
	echo
	apt -y update
	apt -y upgrade
	apt -y autoremove
	apt -y autoclean
	apt -y clean
	rm -rf /var/lib/apt/lists/*
}

update_bios() {
	echo
	echo "Checking for BIOS updates..."
	echo
	fwupdmgr refresh --force
	fwupdmgr get-updates
	fwupdmgr update
}

update() {
	echo "update-packages is running the update functions"

	# detect the OS for the update functions
	if [[ "$OSTYPE" == "linux-gnu" ]]; then
		echo "Hey there Linux user. You rule."

		# on linux, make sure they are the super user
		if [ "$UID" -ne 0 ]; then
			echo "Please run as root"
			exit 1
		fi

		# update
		get_user;
		update_apt;
	else
		echo "We don't have update functions for OS: ${OSTYPE}"
		echo "Moving on..."
	fi

	echo "htotheizzo is complete, you got 99 problems but updates ain't one"
}

main() {
	local arg=$1
	if [[ -n "$arg" ]]; then
		help
	else
		update
	fi
}

main "$@"
