# vi: ft=dosini
[main]

# enables context sensitive auto-completion. if this is disabled the all
# possible completions will be listed.
smart_completion = true

# display the completions in several columns. (more completions will be
# visible.)
wider_completion_menu = false

# multi-line mode allows breaking up the sql statements into multiple lines. if
# this is set to true, then the end of the statements must have a semi-colon.
# if this is set to false then sql statements can't be split into multiple
# lines. end of line (return) is considered as the end of the statement.
multi_line = false

# if multi_line_mode is set to "psql", in multi-line mode, [enter] will execute
# the current input if the input ends in a semicolon.
# if multi_line_mode is set to "safe", in multi-line mode, [enter] will always
# insert a newline, and [esc] [enter] or [alt]-[enter] must be used to execute
# a command.
multi_line_mode = psql

# enables expand mode, which is similar to `\x` in psql.
expand = false

# enables auto expand mode, which is similar to `\x auto` in psql.
auto_expand = false

# if set to true, table suggestions will include a table alias
generate_aliases = false

# log_file location.
# in unix/linux: ~/.config/pgcli/log
# in windows: %userprofile%\appdata\local\dbcli\pgcli\log
# %userprofile% is typically c:\users\{username}
log_file = default

# keyword casing preference. possible values "lower", "upper", "auto"
keyword_casing = auto

# casing_file location.
# in unix/linux: ~/.config/pgcli/casing
# in windows: %userprofile%\appdata\local\dbcli\pgcli\casing
# %userprofile% is typically c:\users\{username}
casing_file = default

# if generate_casing_file is set to true and there is no file in the above
# location, one will be generated based on usage in sql/plpgsql functions.
generate_casing_file = false

# casing of column headers based on the casing_file described above
case_column_headers = true

# history_file location.
# in unix/linux: ~/.config/pgcli/history
# in windows: %userprofile%\appdata\local\dbcli\pgcli\history
# %userprofile% is typically c:\users\{username}
history_file = default

# default log level. possible values: "critical", "error", "warning", "info"
# and "debug". "none" disables logging.
log_level = info

# order of columns when expanding * to column list
# possible values: "table_order" and "alphabetic"
asterisk_column_order = table_order

# whether to qualify with table alias/name when suggesting columns
# possible values: "always", never" and "if_more_than_one_table"
qualify_columns = if_more_than_one_table

# when no schema is entered, only suggest objects in search_path
search_path_filter = false

# default pager.
# by default 'pager' environment variable is used
#pager = less -srxf
pager = less -imsx4 -fxr

# timing of sql statments and table rendering.
timing = true

# table format. possible values: psql, plain, simple, grid, fancy_grid, pipe,
# ascii, double, github, orgtbl, rst, mediawiki, html, latex, latex_booktabs,
# textile, moinmoin, jira, vertical, tsv, csv.
# recommended: psql, fancy_grid and grid.
table_format = psql

# syntax style. possible values: manni, igor, xcode, vim, autumn, vs, rrt,
# native, perldoc, borland, tango, emacs, friendly, monokai, paraiso-dark,
# colorful, murphy, bw, pastie, paraiso-light, trac, default, fruity
syntax_style = default

# keybindings:
# when vi mode is enabled you can use modal editing features offered by vi in the repl.
# when vi mode is disabled emacs keybindings such as ctrl-a for home and ctrl-e
# for end are available in the repl.
vi = false

# error handling
# when one of multiple sql statements causes an error, choose to either
# continue executing the remaining statements, or stopping
# possible values "stop" or "resume"
on_error = stop

# set threshold for row limit prompt. use 0 to disable prompt.
row_limit = 1000

# skip intro on startup and goodbye on exit
less_chatty = false

# postgres prompt
# \t - current date and time
# \u - username
# \h - short hostname of the server (up to first '.')
# \h - hostname of the server
# \d - database name
# \p - database port
# \i - postgres pid
# \# - "@" sign if logged in as superuser, '>' in other case
# \n - newline
# \dsn_alias - name of dsn alias if -d option is used (empty otherwise)
prompt = '\u@\h:\d> '

# number of lines to reserve for the suggestion menu
min_num_menu_lines = 4

# character used to left pad multi-line queries to match the prompt size.
multiline_continuation_char = ''

# the string used in place of a null value.
null_string = '<null>'

# manage pager on startup
enable_pager = true

# custom colors for the completion menu, toolbar, etc.
[colors]
token.menu.completions.completion.current = 'bg:#ffffff #000000'
token.menu.completions.completion = 'bg:#008888 #ffffff'
token.menu.completions.meta.current = 'bg:#44aaaa #000000'
token.menu.completions.meta = 'bg:#448888 #ffffff'
token.menu.completions.multicolumnmeta = 'bg:#aaffff #000000'
token.menu.completions.progressbutton = 'bg:#003333'
token.menu.completions.progressbar = 'bg:#00aaaa'
token.selectedtext = '#ffffff bg:#6666aa'
token.searchmatch = '#ffffff bg:#4444aa'
token.searchmatch.current = '#ffffff bg:#44aa44'
token.toolbar = 'bg:#222222 #aaaaaa'
token.toolbar.off = 'bg:#222222 #888888'
token.toolbar.on = 'bg:#222222 #ffffff'
token.toolbar.search = 'noinherit bold'
token.toolbar.search.text = 'nobold'
token.toolbar.system = 'noinherit bold'
token.toolbar.arg = 'noinherit bold'
token.toolbar.arg.text = 'nobold'
token.toolbar.transaction.valid = 'bg:#222222 #00ff5f bold'
token.toolbar.transaction.failed = 'bg:#222222 #ff005f bold'

# color of table
# you can use token or custom colors 
token.output.header = "#00ff5f bold"
token.output.oddrow = ""
token.output.evenrow = ""

# named queries are queries you can execute by name.
[named queries]

# dsn to call by -d option
[alias_dsn]
# example_dsn = postgresql://[user[:password]@][netloc][:port][/dbname]

# format for number representation
# for decimal "d" - 12345678, ",d" - 12,345,678
# for float "g" - 123456.78, ",g" - 123,456.78
[data_formats]
decimal = ""
float = ""
