#!/bin/bash

git-log () {
  if ! is_git_repo; then
    echo "No git repository found"
    return;
  fi
  
  # param validation
  if [[ ! `git log -n 1 $@ | head -n 1` ]] ;then
    return
  fi

  # filter by file string
  local filter
  # param existed, git log for file if existed
  if [ -n $@ ] && [ -f $@ ]; then
    filter="-- $@"
  fi
  
  local pager=$(git config core.pager || echo 'less -R');
  if [[ $pager =~ "delta" ]]; then
    local pager_preview_options="--commit-style=omit";
  fi

  # git command
  local gitlog=(
    git log
    --graph --color=always
    --abbrev=7
    --format='%C(auto)%h %an %C(blue)%s %C(yellow)%cr'
    $@
  )
  
  local displayFn="grep -o '[a-f0-9]\{7\}' | head -1 | xargs -I % sh -c 'git show --color=always % $filter | $pager'"

  # fzf command
  local fzf=(
    fzf
    --ansi --no-sort --reverse --tiebreak=index +m
    --preview "f() { set -- \$(echo -- \$@ | grep -o '[a-f0-9]\{7\}'); [ \$# -eq 0 ] || git show --color=always \$1 $filter | $pager $pager_preview_options; }; f {}"
    --bind "enter:execute:
                ($displayFn) << 'FZF-EOF'
                {}
                FZF-EOF"
    --bind "f3:execute:
                ($displayFn) << 'FZF-EOF'
                {}
                FZF-EOF"
    --preview-window=right:60%
  )

  $gitlog | $fzf
}
git-log $@